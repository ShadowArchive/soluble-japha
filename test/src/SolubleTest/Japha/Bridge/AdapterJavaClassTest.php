<?php

namespace SolubleTest\Japha\Bridge;

use Soluble\Japha\Bridge\Adapter;
use Soluble\Japha\Bridge\Exception\ClassNotFoundException;
use Soluble\Japha\Interfaces\JavaClass;
use Soluble\Japha\Interfaces\JavaObject;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-11-04 at 16:47:42.
 */
class AdapterJavaClassTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var string
     */
    protected $servlet_address;

    /**
     * @var Adapter
     */
    protected $adapter;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        \SolubleTestFactories::startJavaBridgeServer();

        $this->servlet_address = \SolubleTestFactories::getJavaBridgeServerAddress();

        $this->adapter = new Adapter([
            'driver' => 'Pjb62',
            'servlet_address' => $this->servlet_address,
        ]);
    }

    public function testGetName()
    {
        $ba = $this->adapter;

        $cls = $ba->javaClass('java.util.HashMap');
        $className = $cls->getName();
        $this->assertInternalType('string', $className);
        $this->assertEquals('java.util.HashMap', $className);
    }

    public function testGetClassOnClass()
    {
        $ba = $this->adapter;

        $cls = $ba->javaClass('java.util.HashMap');
        $class = $cls->getClass();
        $this->assertInstanceOf(JavaObject::class, $class);
        // @TODO possible bc-break, makes this type of call returning a
        // JavaClass
        //$this->assertInstanceOf(JavaClass::class, $class);
        $this->assertEquals('java.lang.Class', $class->getName());
    }

    public function testJavaClassThrowsClassNotFoundException()
    {
        $this->setExpectedException(ClassNotFoundException::class);

        $ba = $this->adapter;

        $cls = $ba->javaClass('java.INVALIDPKG.HashMap');
    }
}
